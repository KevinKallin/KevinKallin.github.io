---
layout: post
title: "Vad är serverless"
date: 2021-09-16 17:17:00
tags: Serverless FaaS AzureFunctions
--- 

### Vad är serverless? 

På namnet så låter det kanske som man kör program utan att använda sig av en server, men så är inte fallet.
Med "Serverless" är hur en server hanteras samt implementeras och är något som hanteras av molnbaserade leverantörer.
Servern/servrarna hanteras alltså istället av en leverantör och inte från företaget som utvecklar sin app. 
På detta viset, så slipper företaget som hyr servern att underhålla, utveckla, uppdatera och hantera vanliga infrastrukturuppgifter.

Serverless arkitekturen håller aldrig berkäkningsresurser i instabila minnen, utan beräkningsresurserna tar plats i små partier. 
Låt säga att i fall man inte använder en applikation, så kommer inga resurser att tilldelas till servern.
Med detta så betalar man för det man använder och det blir kostnadseffektivt för företaget. 

Huvudsaken med denna serverless modellen är att underlätta utvecklingsprocessen till produktion. 
När man väl distribuerat tjänsten så svarar applikationen väldigt snabbt till krav och kan skala upp och ner applikationen automatiskt efter kravspecifikationen.
Utvecklarna som använder tjänsten, behöver inte tänka på bandbredd eller hur många servrar applikationen behöver. 
Man kan kräva mer bandbredd och servrar efter behov medans behoven ökar och det går snabbt att fixa utan större bemödan.

### Fördelar med serverless

<strong>Kostnadseffektivt<strong>

Som jag var inne på tidigare, så blir det billigare för ett företag att använda sig av serverless.
Man betalar för det man använder och slipper då onödiga kostnader som att betala för appar som man inte använder längre.
Molntjänstleverantören tar bara betalt utav dig för minnet som används och tiden som koden körs och inte för appar som är inaktiva.

Man sparar pengar på saker som att man slipper installation, licenser, uppdatering m.m.

<strong>Snabbare appdistribution

Utvecklarna behöver inte köra backend konfigurationen eller ladda upp kod till servern för att distribuera en ny version av appen. 
Man har också flexibiliteten att distrubuera ny kod direkt efter varandra eftersom det inte är någon sluten arkitektur. 
Utöver ovanstående, så kan man även uppdatera, lägga till nya funktioner och fixa fel i appen väldigt snabbt. 








